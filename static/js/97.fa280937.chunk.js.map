{"version":3,"file":"static/js/97.fa280937.chunk.js","mappings":"yJAuDA,MACA,EAAe,IAA0B,wD,gDCtDlC,SAASA,IACd,MAAMC,GADgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IACbG,QAAO,CAACC,EAAKC,KACvCD,EAAIC,IAAS,EACND,IACN,CAAC,IAEGE,EAAeC,IAAoBC,EAAAA,EAAAA,UAAST,GASnD,MAAO,CAAEO,gBAAeG,yBAPSJ,IAC/BE,GAAiBG,IAAS,IACrBA,EACH,CAACL,IAASK,EAAUL,MACnB,EAIP,C,2DChBO,MAAMM,E,QAAYC,GAAOC,EAACC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uLACtBC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAOC,IAAI,IAE5BC,IAAA,IAAC,MAAEH,GAAOG,EAAA,OAAKH,EAAMI,UAAUC,EAAE,I,aCDzC,MAAMC,EAAYP,IAAe,IAAd,KAAEQ,GAAMR,EAChC,OACES,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CACXF,KAAMA,EACNG,OAAQC,IAAWH,EAAAA,EAAAA,KAACd,EAAS,CAAAkB,SAAED,KAC/B,C,wMCJC,MAAME,EAAclB,EAAAA,GAAOmB,IAAGjB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mmBAUhBC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMe,MAAMC,MAAM,IACpCb,IAAA,IAAC,MAAEH,GAAOG,EAAA,OAAKH,EAAMiB,QAAQC,OAAO,GAE1BC,GAMTC,IAAA,IAAC,MAAEpB,GAAOoB,EAAA,OAAKpB,EAAMe,MAAMC,MAAM,IACpCK,IAAA,IAAC,MAAErB,GAAOqB,EAAA,OAAKrB,EAAMiB,QAAQC,OAAO,IAUvCI,GAAa3B,EAAAA,EAAAA,IAAO4B,EAAAA,GAAP5B,CAAY6B,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,wHAK7B2B,IAAA,IAAC,MAAEzB,GAAOyB,EAAA,OAAKzB,EAAM0B,QAAQ,GAAG,IAG5BC,EAAehC,EAAAA,GAAOmB,IAAGc,IAAAA,GAAA9B,EAAAA,EAAAA,GAAA,2GAOzB+B,GAAclC,EAAAA,EAAAA,IAAOmC,EAAAA,GAAPnC,CAAaoC,IAAAA,GAAAjC,EAAAA,EAAAA,GAAA,6iBAI5BkC,IAAA,IAAC,MAAEhC,GAAOgC,EAAA,OAAKhC,EAAM0B,QAAQ,EAAE,IAoB9BO,EAAgBtC,EAAAA,GAAOmB,IAAGoB,IAAAA,GAAApC,EAAAA,EAAAA,GAAA,wHAK9BqC,IAAA,IAAC,MAAEnC,GAAOmC,EAAA,OAAKnC,EAAM0B,QAAQ,EAAE,IAG3BU,GAAYzC,EAAAA,EAAAA,IAAO0C,EAAAA,IAAP1C,CAAgB2C,IAAAA,GAAAxC,EAAAA,EAAAA,GAAA,2LAY5ByC,EAAc5C,EAAAA,GAAOmB,IAAG0B,IAAAA,GAAA1C,EAAAA,EAAAA,GAAA,iCAGxB2C,EAAe9C,EAAAA,GAAOmB,IAAG4B,IAAAA,GAAA5C,EAAAA,EAAAA,GAAA,iCAGzB6C,GAAgBhD,EAAAA,EAAAA,IAAOiD,EAAAA,IAAPjD,CAAgBkD,IAAAA,GAAA/C,EAAAA,EAAAA,GAAA,yMAWhCgD,EAAenD,EAAAA,GAAOmB,IAAGiC,IAAAA,GAAAjD,EAAAA,EAAAA,GAAA,iCAIzBkD,EAAoBrD,EAAAA,GAAOmB,IAAGmC,IAAAA,GAAAnD,EAAAA,EAAAA,GAAA,+H,iFCjHpC,MAAMoD,EAAcvD,EAAAA,GAAOmB,IAAGjB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2GAOxBqD,EAAYxD,EAAAA,GAAOyD,GAAE5B,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,kQACvBC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAOoD,WAAW,IAEjClD,IAAA,IAAC,MAAEH,GAAOG,EAAA,OAAKH,EAAMsD,MAAMC,OAAO,IActCC,EAAW7D,EAAAA,GAAO8D,IAAG7B,IAAAA,GAAA9B,EAAAA,EAAAA,GAAA,iLAGRsB,IAAA,IAAC,MAAEpB,GAAOoB,EAAA,OAAKpB,EAAM0D,YAAYH,OAAO,I,aCzB3D,MAAMI,EAAOA,KAEhBC,EAAAA,EAAAA,MAACV,EAAW,CAAAtC,SAAA,EACVJ,EAAAA,EAAAA,KAACgD,EAAQ,CAACK,IAAKC,EAAAA,EAAgBC,IAAI,qBACnCvD,EAAAA,EAAAA,KAAC2C,EAAS,CAAAvC,SAAC,kB,0HCDV,MAAMoD,GAAiBrE,EAAAA,EAAAA,IAAOkB,EAAAA,GAAPlB,CAAmBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,okBAU5BC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMe,MAAMC,MAAM,IACpCb,IAAA,IAAC,MAAEH,GAAOG,EAAA,OAAKH,EAAMiB,QAAQC,OAAO,GAE1BC,GAMTC,IAAA,IAAC,MAAEpB,GAAOoB,EAAA,OAAKpB,EAAMe,MAAMC,MAAM,IACpCK,IAAA,IAAC,MAAErB,GAAOqB,EAAA,OAAKrB,EAAMiB,QAAQC,OAAO,IASvC+C,GAAatE,EAAAA,EAAAA,IAAOuE,EAAAA,GAAPvE,CAAY6B,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,ouBAIvB2B,IAAA,IAAC,MAAEzB,GAAOyB,EAAA,OAAKzB,EAAM0B,QAAQ,GAAG,IAC/BM,IAAA,IAAC,MAAEhC,GAAOgC,EAAA,OAAKhC,EAAM0B,QAAQ,KAAK,IAIjCS,IAAA,IAAC,MAAEnC,GAAOmC,EAAA,OAAKnC,EAAMsD,MAAMC,OAAO,IAQxCY,IAAA,IAAC,MAAEnE,GAAOmE,EAAA,OAAKnE,EAAMC,OAAOmE,aAAa,IACpCC,IAAA,IAAC,MAAErE,GAAOqE,EAAA,OAAKrE,EAAMC,OAAOqE,UAAU,IAC1CC,IAAA,IAAC,MAAEvE,GAAOuE,EAAA,OAAKvE,EAAMwE,QAAQxD,MAAM,IAC7ByD,IAAA,IAAC,MAAEzE,GAAOyE,EAAA,OAAKzE,EAAMC,OAAOyE,IAAI,IAC/BC,IAAA,IAAC,MAAE3E,GAAO2E,EAAA,OAAK3E,EAAMe,MAAM6D,MAAM,IACpCC,IAAA,IAAC,MAAE7E,GAAO6E,EAAA,OAAK7E,EAAMiB,QAAQ6D,SAAS,IAYrCC,IAAA,IAAC,MAAE/E,GAAO+E,EAAA,OAAK/E,EAAM0B,QAAQ,GAAG,IAIpCsD,GAAmBrF,EAAAA,EAAAA,IAAOsF,EAAAA,IAAPtF,CAA4BiC,IAAAA,GAAA9B,EAAAA,EAAAA,GAAA,wM,mECtErD,MAAMoF,EAAqBnF,IAAiC,IAAhC,aAAEoF,EAAY,SAAEC,GAAUrF,EAC3D,OACES,EAAAA,EAAAA,KAACwC,EAAAA,GAAiB,CAAApC,SACfuE,GACC3E,EAAAA,EAAAA,KAAC6E,EAAAA,IAAK,CAACC,QAASF,KAEhB5E,EAAAA,EAAAA,KAAC+E,EAAAA,IAAU,CAACD,QAASF,KAEL,C,yHCVjB,MAAMI,EAAcC,GACzBC,EAAAA,KAAaC,MAAM,CACjBC,MAAOF,EAAAA,KAEJE,MAAMH,EAAE,uCACRI,KAAK,OAAQJ,EAAE,gDAAgDK,IAC1DA,GACKA,EAAMC,SAAWD,IAI3BE,SAASP,EAAE,mBACXQ,IAAI,GAAIR,EAAE,qDACbS,SAAUR,EAAAA,KAEPG,KAAK,OAAQJ,EAAE,gDAAgDK,IAC1DA,GACKA,EAAMC,SAAWD,IAI3BE,SAASP,EAAE,mBACXU,IAAI,EAAGV,EAAE,gDACTQ,IAAI,GAAIR,EAAE,qDACVW,QACC,4FACAX,EACE,+F,yECJH,MAAMY,EAAYA,KACvB,MAAM,cAAEhH,EAAa,yBAAEG,IAA6BX,EAAAA,EAAAA,GAAkB,CACpE,YACA,cAEIyH,GAAWC,EAAAA,EAAAA,OAEX,EAAEd,IAAMe,EAAAA,EAAAA,MAqBd,OACE5C,EAAAA,EAAAA,MAAC/C,EAAAA,GAAW,CAAAD,SAAA,EACVJ,EAAAA,EAAAA,KAACmD,EAAAA,EAAI,KACLnD,EAAAA,EAAAA,KAACiG,EAAAA,GAAM,CACLC,cAvBgB,CACpBd,MAAO,GACPM,SAAU,IAsBNS,iBAAkBnB,EAAYC,GAC9BmB,SApBeC,CAACf,EAAK/F,KAAqB,IAAnB,UAAE+G,GAAW/G,EACxCuG,GAASS,EAAAA,EAAAA,IAAWjB,IACjBkB,SACAC,MAAKC,IACJJ,IACAK,EAAAA,GAAMC,QAAQ,GAADC,OACR5B,EAAE,aAAY,MAAA4B,OAAKH,EAAKI,KAAKC,SAAQ,MAAAF,OAAK5B,EAAE,UAChD,IAEF+B,OAAMC,IACLN,EAAAA,GAAMM,MAAMhC,EAAE,eAAe,GAC7B,EASuB7E,UAEvBgD,EAAAA,EAAAA,MAACtC,EAAAA,GAAU,CAAAV,SAAA,EACTgD,EAAAA,EAAAA,MAACjC,EAAAA,GAAY,CAAAf,SAAA,EACXgD,EAAAA,EAAAA,MAACrB,EAAAA,GAAW,CAAA3B,SAAA,EACVJ,EAAAA,EAAAA,KAACqB,EAAAA,GAAW,CACV6F,KAAK,QACLnH,KAAK,QACLoH,MAAOlC,EAAE,qBACTmC,YAAanC,EAAE,SACfoC,aAAa,MACb7B,UAAQ,KAEVxF,EAAAA,EAAAA,KAAC4B,EAAAA,GAAS,CAAC0F,KAAM,SAEnBtH,EAAAA,EAAAA,KAACF,EAAAA,EAAS,CAACC,KAAK,WAChBqD,EAAAA,EAAAA,MAACd,EAAAA,GAAY,CAAAlC,SAAA,EACXgD,EAAAA,EAAAA,MAACnB,EAAAA,GAAY,CAAA7B,SAAA,EACXJ,EAAAA,EAAAA,KAACqB,EAAAA,GAAW,CACV6F,KAAMrI,EAAc0I,UAAY,OAAS,WACzCxH,KAAK,WACLoH,MAAOlC,EAAE,wBACTmC,YAAanC,EAAE,YACfoC,aAAa,MACb7B,UAAQ,KAEVxF,EAAAA,EAAAA,KAACmC,EAAAA,GAAa,QAEhBnC,EAAAA,EAAAA,KAAC0E,EAAAA,EAAkB,CACjBC,aAAc9F,EAAc0I,UAC5B3C,SAAUA,IAAM5F,EAAyB,mBAG7CgB,EAAAA,EAAAA,KAACF,EAAAA,EAAS,CAACC,KAAK,iBAElBC,EAAAA,EAAAA,KAACyB,EAAAA,GAAa,CAAArB,UACZJ,EAAAA,EAAAA,KAACwH,EAAAA,EAAM,CAACC,QAAQ,UAAUP,KAAK,SAASQ,KAAMzC,EAAE,uBAItDjF,EAAAA,EAAAA,KAACyD,EAAAA,GAAU,CAACkE,GAAG,YAAWvH,SAAE6E,EAAE,gBAClB,E,2RC5FX,MAAM2C,EAAsBzI,EAAAA,GAAOmB,IAAGjB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,w/B,4sOAuBjBuI,EAMEC,EAKFC,EAMEC,GCrC9B,EARcC,KAEVjI,EAAAA,EAAAA,KAAC4H,EAAmB,CAAAxH,UAClBJ,EAAAA,EAAAA,KAAC6F,EAAS,K","sources":["images/logo.svg","Hooks/usePasswordToggle.js","components/FormError/FormError.styled.js","components/FormError/FormError.jsx","components/LoginForm/LoginForm.styled.js","components/Logo/Logo.styled.js","components/Logo/Logo.jsx","components/RegisterForm/RegisterForm.styled.js","components/TogglePasswordVisibility/TogglePasswordVisibility.jsx","services/validation/validationLoginSchema.js","components/LoginForm/LoginForm.jsx","page/LogIn/LogIn.styled.js","page/LogIn/LogIn.jsx"],"sourcesContent":["var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgLogo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 25,\n    height: 23,\n    viewBox: \"0 0 25 23\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_17_848)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M17.0686 3.08869C15.4052 2.69093 13.7419 1.89542 12.4944 0.702148C11.2469 1.89542 9.58351 2.69093 7.92017 3.08869C8.336 6.6685 9.58351 9.05504 12.4944 11.0438C15.4052 9.05504 17.0686 6.6685 17.0686 3.08869Z\",\n    fill: \"#FFB627\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M15.4051 17.8989L3.76172 4.77295V11.1371L12.9101 21.081L15.4051 17.8989Z\",\n    fill: \"#FBFBFB\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M16.653 16.7058L21.6431 11.1372V5.1709L13.7422 13.9215L16.653 16.7058Z\",\n    fill: \"#FBFBFB\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M17.0688 18.6945V22.2743L21.643 17.1035V13.5237L17.0688 18.6945Z\",\n    fill: \"#FBFBFB\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8.33592 18.6945L3.76172 13.5237V17.1035L8.33592 22.2743V18.6945Z\",\n    fill: \"#FBFBFB\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_17_848\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 23.4894,\n    height: 22.4681,\n    fill: \"white\",\n    transform: \"translate(0.95752)\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.143a8f6f5dcf526cdac1808c9d0577d6.svg\";\nexport { ForwardRef as ReactComponent };","import { useState } from 'react';\n\nexport function usePasswordToggle(fields = []) {\n  const initialState = fields.reduce((acc, field) => {\n    acc[field] = false;\n    return acc;\n  }, {});\n\n  const [showPasswords, setShowPasswords] = useState(initialState);\n\n  const togglePasswordVisibility = field => {\n    setShowPasswords(prevState => ({\n      ...prevState,\n      [field]: !prevState[field],\n    }));\n  };\n\n  return { showPasswords, togglePasswordVisibility };\n}\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.p`\n  color: ${({ theme }) => theme.colors.pink};\n  font-style: italic;\n  font-size: ${({ theme }) => theme.fontSizes.xs};\n  text-align: center;\n\n  @media screen and (max-width: 768px) {\n    width: 280px;\n    text-align: center;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ErrorMessage } from 'formik';\nimport { ErrorText } from 'components/FormError/FormError.styled';\n\nexport const FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nFormError.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import { Field, Form } from 'formik';\nimport { IoMdMail, IoMdLock } from 'react-icons/io';\nimport styled from 'styled-components';\nimport mobile2x from 'images/register-bg/bg-register-mobile@2x.jpg';\n\nexport const WrapperForm = styled.div`\n  padding: 96px 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  @media (min-width: 320px) and (max-width: 767.9px) {\n    height: 100%;\n    width: 100%;\n    border-radius: ${({ theme }) => theme.radii.normal};\n    box-shadow: ${({ theme }) => theme.shadows.primary};\n    background-size: cover;\n    background-image: url(${mobile2x});\n  }\n  @media (min-width: 768px) {\n    padding: 80px 62px;\n    width: 533px;\n  }\n  border-radius: ${({ theme }) => theme.radii.normal};\n  box-shadow: ${({ theme }) => theme.shadows.primary};\n\n  background: radial-gradient(\n    circle,\n    rgb(64, 46, 155, 0.95) 5%,\n    rgb(76, 50, 113, 0.95) 100%\n  );\n  backdrop-filter: blur(1px);\n`;\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.spacing(10)};\n`;\n\nexport const WrapperField = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const FieldStyled = styled(Field)`\n  margin-top: 40px;\n  padding-left: 40px;\n  width: 280px;\n  height: ${({ theme }) => theme.spacing(9)};\n  outline: none;\n  border: none;\n  border-bottom: 2px solid rgba(255, 255, 255, 0.4);\n  background-color: rgba(255, 255, 255, 0);\n  color: rgba(255, 255, 255, 0.6);\n  @media (min-width: 768px) {\n    width: 409px;\n  }\n\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover,\n  &:-webkit-autofill:focus,\n  &:-webkit-autofill:active {\n    transition: background-color 5000s ease-in-out 0s;\n    -webkit-text-fill-color: var(--white) !important;\n    right: 0;\n  }\n`;\n\nexport const WrapperButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.spacing(5)};\n`;\n\nexport const EmailIcon = styled(IoMdMail)`\n  height: 24px;\n\n  color: rgba(255, 255, 255, 0.4);\n  position: absolute;\n  left: 8px;\n  top: 74%;\n  transform: translateY(-50%);\n  pointer-events: none;\n  z-index: 1;\n`;\n\nexport const WrapperIcon = styled.div`\n  position: relative;\n`;\nexport const WrapperIcon2 = styled.div`\n  position: relative;\n`;\nexport const PasswordlIcon = styled(IoMdLock)`\n  height: 24px;\n  width: 24px;\n  color: rgba(255, 255, 255, 0.4);\n  position: absolute;\n  left: 8px;\n  top: 74%;\n  transform: translateY(-50%);\n  pointer-events: none;\n  z-index: 1;\n`;\nexport const WrapperIcon3 = styled.div`\n  position: relative;\n`;\n\nexport const PasswordlIconLook = styled.div`\n  height: 24px;\n  width: 24px;\n  color: rgba(255, 255, 255, 0.4);\n  position: absolute;\n  right: 0;\n  top: 63%;\n`;\n","import styled from 'styled-components';\n\nexport const WrapperLogo = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const TitleLogo = styled.h2`\n  color: ${({ theme }) => theme.colors.primaryFont};\n  text-align: center;\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-size: 19px;\n  font-style: normal;\n  font-weight: 400;\n  margin-top: 8px;\n  height: 40px;\n\n  letter-spacing: 1.8px;\n\n  @media (min-width: 768px) {\n    font-size: 27px;\n  }\n`;\n\nexport const LogoForm = styled.img`\n  width: 25px;\n  height: 25px;\n  transition: transform ${({ theme }) => theme.transitions.regular};\n  outline: none;\n\n  @media screen and (min-width: 768px) {\n    width: 35px;\n    height: 35px;\n  }\n`;\n","import React from 'react';\nimport moneyGuardLogo from 'images/logo.svg';\nimport { LogoForm, TitleLogo, WrapperLogo } from './Logo.styled';\n\nexport const Logo = () => {\n  return (\n    <WrapperLogo>\n      <LogoForm src={moneyGuardLogo} alt=\"MoneyGuard Logo\" />\n      <TitleLogo>Money Guard</TitleLogo>\n    </WrapperLogo>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport { WrapperForm } from 'components/LoginForm/LoginForm.styled';\n\nimport { BiSolidUserRectangle } from 'react-icons/bi';\nimport styled from 'styled-components';\nimport mobile2x from 'images/register-bg/bg-register-mobile@2x.jpg';\n\nexport const WrapperFormReg = styled(WrapperForm)`\n  padding: 40px 62px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  @media (min-width: 320px) and (max-width: 767.9px) {\n    height: 100%;\n    width: 100%;\n    border-radius: ${({ theme }) => theme.radii.normal};\n    box-shadow: ${({ theme }) => theme.shadows.primary};\n    background-size: cover;\n    background-image: url(${mobile2x});\n  }\n  @media (min-width: 768px) {\n    padding: 40px 62px;\n    width: 533px;\n  }\n  border-radius: ${({ theme }) => theme.radii.normal};\n  box-shadow: ${({ theme }) => theme.shadows.primary};\n\n  background: radial-gradient(\n    circle,\n    rgb(64, 46, 155, 0.95) 5%,\n    rgb(76, 50, 113, 0.95) 100%\n  );\n`;\n\nexport const LinkStyled = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: ${({ theme }) => theme.spacing(70)};\n  min-height: ${({ theme }) => theme.spacing(12.5)};\n  margin-top: 20px;\n\n  text-align: center;\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: 1.8px;\n  text-transform: uppercase;\n\n  color: ${({ theme }) => theme.colors.btnVioletText};\n  background: ${({ theme }) => theme.colors.btnWhiteBg};\n  border: ${({ theme }) => theme.borders.normal};\n  border-color: ${({ theme }) => theme.colors.blue};\n  border-radius: ${({ theme }) => theme.radii.button};\n  box-shadow: ${({ theme }) => theme.shadows.secondary};\n  cursor: pointer;\n  transition: transform 250ms ease-in-out;\n\n  &:focus,\n  &:hover {\n    border-radius: 18px;\n    border: 2px solid yellow;\n    transform: scale(1.01);\n    box-shadow: 1px 5px 8px 0px rgba(0, 0, 0, 0.5);\n  }\n  @media (min-width: 768px) {\n    min-width: ${({ theme }) => theme.spacing(75)};\n  }\n`;\n\nexport const NameRegisterIcon = styled(BiSolidUserRectangle)`\n  height: 24px;\n  width: 24px;\n  color: rgba(255, 255, 255, 0.4);\n  position: absolute;\n  left: 8px;\n  top: 74%;\n  transform: translateY(-50%);\n  pointer-events: none;\n  z-index: 1;\n`;\n","import PropTypes from 'prop-types';\nimport { PasswordlIconLook } from 'components/LoginForm/LoginForm.styled';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\n\nexport const TogglePasswordIcon = ({ showPassword, onToggle }) => {\n  return (\n    <PasswordlIconLook>\n      {showPassword ? (\n        <FaEye onClick={onToggle} />\n      ) : (\n        <FaEyeSlash onClick={onToggle} />\n      )}\n    </PasswordlIconLook>\n  );\n};\n\nTogglePasswordIcon.propTypes = {\n  onToggle: PropTypes.func.isRequired,\n  showPassword: PropTypes.bool.isRequired,\n};\n","import * as yup from 'yup';\n\nexport const loginSchema = t =>\n  yup.object().shape({\n    email: yup\n      .string()\n      .email(t('Please enter a valid email address'))\n      .test('trim', t('The field must not start or end with spaces'), value => {\n        if (value) {\n          return value.trim() === value;\n        }\n        return true;\n      })\n      .required(t('required field'))\n      .max(30, t('the name must contain a maximum of 30 characters')),\n    password: yup\n      .string()\n      .test('trim', t('The field must not start or end with spaces'), value => {\n        if (value) {\n          return value.trim() === value;\n        }\n        return true;\n      })\n      .required(t('required field'))\n      .min(6, t('Password must contain at least 6 characters'))\n      .max(12, t('Password must contain a maximum of 12 characters'))\n      .matches(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d|.*[!@#$%^&*()_+\\-=.<>])[a-zA-Z\\d!@#$%^&*()_+\\-=.<>]{6,12}$/,\n        t(\n          'Password must contain at least one uppercase letter, one lowercase letter and one number'\n        )\n      ),\n  });\n","import { useTranslation } from 'react-i18next';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { usePasswordToggle } from 'Hooks/usePasswordToggle';\nimport { logInThunk } from 'redux/registerReducers/registerThunks';\nimport { loginSchema } from 'services/validation/validationLoginSchema';\nimport { Logo } from 'components/Logo/Logo';\nimport { FormError } from 'components/FormError/FormError';\nimport { TogglePasswordIcon } from 'components/TogglePasswordVisibility/TogglePasswordVisibility';\nimport { LinkStyled } from 'components/RegisterForm/RegisterForm.styled';\nimport Button from 'components/Button/Button';\nimport {\n  EmailIcon,\n  FieldStyled,\n  FormStyled,\n  PasswordlIcon,\n  WrapperButton,\n  WrapperField,\n  WrapperForm,\n  WrapperIcon,\n  WrapperIcon2,\n  WrapperIcon3,\n} from './LoginForm.styled';\n\nexport const LoginForm = () => {\n  const { showPasswords, togglePasswordVisibility } = usePasswordToggle([\n    'password1',\n    'password2',\n  ]);\n  const dispatch = useDispatch();\n\n  const { t } = useTranslation();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = (value, { resetForm }) => {\n    dispatch(logInThunk(value))\n      .unwrap()\n      .then(data => {\n        resetForm();\n        toast.success(\n          `${t('well done')}, ${data.user.username}! ${t('login')}`\n        );\n      })\n      .catch(error => {\n        toast.error(t('login error'));\n      });\n  };\n\n  return (\n    <WrapperForm>\n      <Logo />\n      <Formik\n        initialValues={initialValues}\n        validationSchema={loginSchema(t)}\n        onSubmit={handleSubmit}\n      >\n        <FormStyled>\n          <WrapperField>\n            <WrapperIcon>\n              <FieldStyled\n                type=\"email\"\n                name=\"email\"\n                title={t('login title email')}\n                placeholder={t('email')}\n                autoComplete=\"off\"\n                required\n              />\n              <EmailIcon size={24} />\n            </WrapperIcon>\n            <FormError name=\"email\" />\n            <WrapperIcon3>\n              <WrapperIcon2>\n                <FieldStyled\n                  type={showPasswords.password1 ? 'text' : 'password'}\n                  name=\"password\"\n                  title={t('login title password')}\n                  placeholder={t('password')}\n                  autoComplete=\"off\"\n                  required\n                />\n                <PasswordlIcon />\n              </WrapperIcon2>\n              <TogglePasswordIcon\n                showPassword={showPasswords.password1}\n                onToggle={() => togglePasswordVisibility('password1')}\n              />\n            </WrapperIcon3>\n            <FormError name=\"password\" />\n          </WrapperField>\n          <WrapperButton>\n            <Button variant=\"primary\" type=\"submit\" text={t('login btn')} />\n          </WrapperButton>\n        </FormStyled>\n      </Formik>\n      <LinkStyled to=\"/register\">{t('register')}</LinkStyled>\n    </WrapperForm>\n  );\n};\n","import styled from 'styled-components';\nimport mobile from 'images/login-bg/bg-login-mobile.jpg';\nimport mobile2x from 'images/login-bg/bg-login-mobile@2x.jpg';\nimport tablet from 'images/login-bg/bg-login-tablet.jpg';\nimport tablet2x from 'images/login-bg/bg-login-tablet@2x.jpg';\nimport desctop from 'images/login-bg/bg-login-web.jpg';\nimport desctop2x from 'images/login-bg/bg-login-web@2x.jpg';\n\nexport const PublicPageContainer = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-position: center;\n  background-repeat: no-repeat;\n  background: #101010;\n\n  background-size: cover;\n  background-image: url(${mobile});\n\n  @media (min-device-pixel-ratio: 2),\n    (-webkit-min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${mobile2x});\n  }\n\n  @media (min-width: 768px) {\n    background-image: url(${tablet});\n\n    @media (min-device-pixel-ratio: 2),\n      (-webkit-min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${tablet2x});\n    }\n  }\n\n  @media (min-width: 1280px) {\n    background-image: url(${desctop});\n\n    @media (min-device-pixel-ratio: 2),\n      (-webkit-min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${desctop2x});\n    }\n  }\n`;\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { PublicPageContainer } from './LogIn.styled';\n\nconst LogIn = () => {\n  return (\n    <PublicPageContainer>\n      <LoginForm />\n    </PublicPageContainer>\n  );\n};\n\nexport default LogIn;\n"],"names":["usePasswordToggle","initialState","arguments","length","undefined","reduce","acc","field","showPasswords","setShowPasswords","useState","togglePasswordVisibility","prevState","ErrorText","styled","p","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","pink","_ref2","fontSizes","xs","FormError","name","_jsx","ErrorMessage","render","message","children","WrapperForm","div","radii","normal","shadows","primary","mobile2x","_ref3","_ref4","FormStyled","Form","_templateObject2","_ref5","spacing","WrapperField","_templateObject3","FieldStyled","Field","_templateObject4","_ref6","WrapperButton","_templateObject5","_ref7","EmailIcon","IoMdMail","_templateObject6","WrapperIcon","_templateObject7","WrapperIcon2","_templateObject8","PasswordlIcon","IoMdLock","_templateObject9","WrapperIcon3","_templateObject10","PasswordlIconLook","_templateObject11","WrapperLogo","TitleLogo","h2","primaryFont","fonts","regular","LogoForm","img","transitions","Logo","_jsxs","src","moneyGuardLogo","alt","WrapperFormReg","LinkStyled","Link","_ref8","btnVioletText","_ref9","btnWhiteBg","_ref10","borders","_ref11","blue","_ref12","button","_ref13","secondary","_ref14","NameRegisterIcon","BiSolidUserRectangle","TogglePasswordIcon","showPassword","onToggle","FaEye","onClick","FaEyeSlash","loginSchema","t","yup","shape","email","test","value","trim","required","max","password","min","matches","LoginForm","dispatch","useDispatch","useTranslation","Formik","initialValues","validationSchema","onSubmit","handleSubmit","resetForm","logInThunk","unwrap","then","data","toast","success","concat","user","username","catch","error","type","title","placeholder","autoComplete","size","password1","Button","variant","text","to","PublicPageContainer","tablet","tablet2x","desctop","desctop2x","LogIn"],"sourceRoot":""}