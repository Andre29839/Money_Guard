{"version":3,"file":"static/js/923.84dae5d5.chunk.js","mappings":"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","sources":["components/Chart/Chart.styled.js","components/Chart/Chart.jsx","components/DataForm/DataForm.styled.js","components/DataForm/DataForm.jsx","components/StatisticTable/StatisticTable.styled.js","components/StatisticTable/StatisticTable.jsx","page/Statistics/Statistics.styled.js","page/Statistics/Statistics.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ChartWrapper = styled.div`\n  position: relative;\n  display: flex;\n  width: 280px;\n  height: 280px;\n  margin-bottom: 32px;\n\n  span {\n    position: absolute;\n    display: flex;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 600;\n    color: var(--white);\n  }\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n    height: 336px;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 288px;\n    height: 288px;\n  }\n`;\n\nexport const ImgMoney = styled.img`\n  width: 200px;\n\n  @media only screen and (min-width: 768px) {\n    width: 250px;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 288px;\n  }\n`;\n","import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { selectAuthData } from 'redux/registerReducers/registerSelector';\nimport { useSelector } from 'react-redux';\nimport { ChartWrapper, ImgMoney } from './Chart.styled';\nimport money from 'images/money.png';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst colorStatistics = {\n  'Main expenses': '#FED057',\n  Products: '#FFD8D0',\n  Car: '#FD9498',\n  'Self care': '#C5BAFF',\n  'Child care': '#6E78E8',\n  'Household products': '#4A56E2',\n  Education: '#81E1FF',\n  Leisure: '#24CCA7',\n  'Other expenses': '#00AD84',\n  Entertainment: '#FF69B4',\n};\n\nconst Chart = ({ data }) => {\n  const totalBalance = useSelector(selectAuthData);\n\n  if (!data || data.length === 0) {\n    return <ImgMoney alt=\"money\" src={money} />;\n  }\n\n  const categories = data;\n\n  const categoryColors = categories.map(item => colorStatistics[item.name]);\n\n  const chartData = {\n    labels: '',\n    datasets: [\n      {\n        data: categories.map(item => item.total),\n        backgroundColor: categoryColors,\n        borderWidth: 0,\n        cutout: '70%',\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    cutout: '70%',\n\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n    },\n  };\n\n  return (\n    <ChartWrapper>\n      <Doughnut data={chartData} options={options} />\n      {data ? <span> &#8372; {totalBalance.balance}</span> : ''}\n    </ChartWrapper>\n  );\n};\n\nexport default Chart;\n","import styled from 'styled-components';\n\nexport const SelectBox = styled.div`\n  display: flex;\n\n  @media screen and (max-width: 767.9px) {\n    gap: 20px;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  @media screen and (max-width: 1279.9px) {\n    gap: 16px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    gap: 32px;\n    width: 182px;\n  }\n`;\n\nexport const customSelect = {\n  container: provided => ({\n    ...provided,\n\n    maxHeight: '50px',\n    fontFamily: 'Poppins',\n    fontSize: '16px',\n    border: '1px solid var(--white-60, --transparency-60)',\n    borderRadius: '8px',\n    '@media screen (max-width: 767.9px)': {\n      maxWidth: '440px',\n      width: '100%',\n    },\n    '@media screen  (max-width: 1279.9px)': {\n      maxWidth: '150px',\n    },\n    '@media screen (min-width: 1280px)': {\n      maxWidth: '182px',\n    },\n  }),\n\n  singleValue: provided => ({\n    ...provided,\n    color: 'var(--white)',\n    fontSize: '16px',\n  }),\n  control: provided => ({\n    ...provided,\n    background: 'var(--control-background)',\n    minHeight: '50px',\n    width: '182px',\n    border: 'none',\n    boxShadow: 'none',\n    margin: '0',\n\n    '@media (max-width: 1279.9px)': {\n      width: '150px',\n    },\n    '@media (max-width: 767.9px)': {\n      width: '280px',\n    },\n  }),\n  option: (provided, { isFocused }) => ({\n    ...provided,\n    cursor: 'pointer',\n    backgroundColor: isFocused ? 'var(--transparency-10)' : 'transparent',\n    color: isFocused ? 'var(--dashboard-text)' : 'var(--white)',\n    '&:hover': {\n      backgroundColor: isFocused ? 'var(--transparency-10)' : 'transparent',\n      color: isFocused ? 'var(--dashboard-text)' : 'var(--white)',\n    },\n    textAlign: 'left',\n    paddingLeft: '20px',\n    fontSize: '16px',\n  }),\n  menu: provided => ({\n    ...provided,\n    textAlign: 'center',\n    borderRadius: '8px',\n    margin: '0',\n    background: 'var(--menu-background)',\n  }),\n  menuList: provided => ({\n    ...provided,\n    borderRadius: '8px',\n    boxShadow: 'var(--header-shadow)',\n    backdropFilter: 'blur(50px)',\n    maxHeight: '157px',\n    '&::-webkit-scrollbar': {\n      width: '4px',\n    },\n\n    '&::-webkit-scrollbar-track': {\n      background: 'transparent',\n    },\n\n    '&::-webkit-scrollbar-thumb': {\n      background: 'var(--menu-list)',\n    },\n\n    '&::-webkit-scrollbar-thumb:hover': {\n      background: 'var(--menu-list)',\n    },\n  }),\n\n  placeholder: provided => ({\n    ...provided,\n    paddingBottom: '2px',\n    color: 'var(--white)',\n    fontSize: '16px',\n  }),\n  indicatorSeparator: provided => ({\n    ...provided,\n    display: 'none',\n  }),\n};\n","import { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { useDispatch } from 'react-redux';\nimport { getTransactionsStatisticThunk } from 'redux/transactionsRedusers/transactionsThunks';\nimport { SelectBox, customSelect } from './DataForm.styled';\nimport { useTranslation } from 'react-i18next';\n\nconst DatePicker = () => {\n  const dispatch = useDispatch();\n  const date = new Date();\n  const { t } = useTranslation();\n\n  const [month, setMonth] = useState(date.getMonth() + 1);\n  const [year, setYear] = useState(date.getFullYear());\n\n  const handleMonthChange = selectedOption => {\n    setMonth(selectedOption.value);\n  };\n\n  const handleSelectYear = selectedOption => {\n    setYear(selectedOption.value);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      dispatch(\n        getTransactionsStatisticThunk({\n          month: Number(month),\n          year: Number(year),\n        })\n      );\n    }, 1500);\n  }, [dispatch, month, year]);\n\n  const months = [\n    { value: 1, label: t('january') },\n    { value: 2, label: t('february') },\n    { value: 3, label: t('march') },\n    { value: 4, label: t('april') },\n    { value: 5, label: t('may') },\n    { value: 6, label: t('june') },\n    { value: 7, label: t('july') },\n    { value: 8, label: t('august') },\n    { value: 9, label: t('september') },\n    { value: 10, label: t('october') },\n    { value: 11, label: t('november') },\n    { value: 12, label: t('december') },\n  ];\n\n  const currentYear = new Date().getFullYear();\n  const years = Array.from({ length: currentYear - 1990 + 1 }, (_, index) => {\n    const year = currentYear - index;\n    return { value: year, label: year.toString() };\n  });\n\n  const currentDate = new Date();\n  const currentMonth = currentDate.getMonth() + 1;\n\n  const currentMonthObject = months.find(month => month.value === currentMonth);\n\n  return (\n    <SelectBox>\n      <Select\n        options={months}\n        styles={customSelect}\n        onChange={handleMonthChange}\n        placeholder={currentMonthObject.label}\n        isSearchable={false}\n      />\n      <Select\n        options={years}\n        styles={customSelect}\n        onChange={handleSelectYear}\n        placeholder={currentYear}\n        isSearchable={false}\n      />\n    </SelectBox>\n  );\n};\n\nexport default DatePicker;\n","import styled from 'styled-components';\n\nexport const TransactionColor = styled.span`\n  display: block;\n  width: 24px;\n  height: 24px;\n  background-color: ${props => props.color};\n  margin-right: 16px;\n`;\n\nexport const Section = styled.div`\n  margin-top: 20px;\n  margin-bottom: 80px;\n`;\n\nexport const StyledWrap = styled.div`\n  max-height: 390px;\n  overflow: auto;\n  &::-webkit-scrollbar {\n    width: 0;\n  }\n  scrollbar-width: thin;\n  scrollbar-color: transparent;\n`;\n\nexport const StyledTable = styled.table`\n  margin: 0;\n  border-radius: 8px;\n  border-collapse: collapse;\n  color: var(--white);\n  width: 281px;\n\n  th,\n  td {\n    height: 55.1px;\n    padding: 0 10px;\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1279.9px) {\n    width: 319px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 399px;\n\n    th,\n    td {\n      height: 55.2px;\n    }\n  }\n`;\n\nexport const WrapSummary = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const WrapIncome = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 30px;\n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: 4px;\n  }\n`;\n\nexport const Thead = styled.thead`\n  border-radius: 8px;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n\n  tr {\n    background-color: var(--background-table);\n    backdrop-filter: blur(50px);\n  }\n`;\nexport const Th = styled.th`\n  padding: 16px;\n`;\n\nexport const ThCategory = styled(Th)`\n  border-radius: 8px 0 0 8px;\n  text-align: left;\n  position: reletive;\n`;\n\nexport const ThSum = styled(Th)`\n  border-radius: 0 8px 8px 0;\n  text-align: right;\n`;\n\nexport const Td = styled.td`\n  padding: 16px;\n  border-bottom: 1px solid #644e89;\n\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n\nexport const TdCategory = styled(Td)`\n  text-align: left;\n  position: relative;\n  display: flex;\n  align-items: center;\n  height: 35px;\n`;\n\nexport const TdColor = styled(Td)`\n  border-radius: 2px;\n  margin-right: 16px;\n`;\n\nexport const TdSum = styled(Td)`\n  text-align: right;\n`;\n\nexport const TotalExpense = styled.div`\n  text-align: right;\n  padding: 16px 16px 0 0;\n\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.5;\n  color: var(--dashboard-text);\n`;\n\nexport const Total = styled.div`\n  text-align: right;\n  padding: 16px 16px 0 0;\n\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.5;\n  color: var(--yellow);\n`;\n\nexport const Transaction = styled.div`\n  text-align: left;\n  padding: 16px 0 0 16px;\n\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.5;\n  color: var(--white);\n`;\n","import { useTranslation } from 'react-i18next';\nimport { nanoid } from 'nanoid';\nimport { useSelector } from 'react-redux';\nimport {\n  Section,\n  StyledTable,\n  StyledWrap,\n  TdCategory,\n  TdSum,\n  ThCategory,\n  ThSum,\n  Thead,\n  Total,\n  TotalExpense,\n  Transaction,\n  TransactionColor,\n  WrapIncome,\n  WrapSummary,\n} from './StatisticTable.styled';\n\nconst StatisticTable = () => {\n  const { t } = useTranslation();\n\n  const sumOfCategories = useSelector(\n    state => state.transactions.summary.categoriesSummary\n  );\n\n  const incomeSum = useSelector(\n    state => state.transactions.summary.incomeSummary\n  );\n\n  const expenseSum = useSelector(\n    state => state.transactions.summary.expenseSummary\n  );\n\n  const colorStatistics = {\n    'Main expenses': '#FED057',\n    Products: '#FFD8D0',\n    Car: '#FD9498',\n    'Self care': '#C5BAFF',\n    'Child care': '#6E78E8',\n    'Household products': '#4A56E2',\n    Education: '#81E1FF',\n    Leisure: '#24CCA7',\n    'Other expenses': '#00AD84',\n    Entertainment: '#FF69B4',\n    Income: '#FFB627',\n  };\n\n  return (\n    sumOfCategories && (\n      <Section>\n        <StyledWrap>\n          <StyledTable>\n            <Thead>\n              <tr>\n                <ThCategory>{t('category')}</ThCategory>\n                <ThSum>{t('sum')}</ThSum>\n              </tr>\n            </Thead>\n            <tbody>\n              {sumOfCategories.map(category => {\n                return (\n                  category.name !== 'Income' && (\n                    <tr key={nanoid()}>\n                      <TdCategory>\n                        <TransactionColor\n                          color={colorStatistics[category.name]}\n                        ></TransactionColor>\n                        <span>{t(category.name)}</span>\n                      </TdCategory>\n                      <TdSum>{category.total}</TdSum>\n                    </tr>\n                  )\n                );\n              })}\n            </tbody>\n          </StyledTable>\n        </StyledWrap>\n        <div>\n          <WrapSummary>\n            <Transaction>{t('expense')}:</Transaction>\n            <TotalExpense>{expenseSum}</TotalExpense>\n          </WrapSummary>\n          <WrapIncome>\n            <Transaction>{t('income')}:</Transaction>\n            <Total>{incomeSum}</Total>\n          </WrapIncome>\n        </div>\n      </Section>\n    )\n  );\n};\n\nexport default StatisticTable;\n","import styled from 'styled-components';\n\nexport const TitleStatistics = styled.h2`\n  font-size: 30px;\n  font-weight: 400;\n  margin-top: 28px;\n  margin-bottom: 8px;\n  color: var(--white);\n  @media only screen and (min-width: 768px) {\n    margin-top: 0;\n    margin-bottom: 20px;\n  }\n  @media only screen and (min-width: 1280px) {\n    margin-top: 32px;\n  }\n`;\n\nexport const StatisticsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  -webkit-box-pack: center;\n  justify-content: center;\n  -webkit-box-align: center;\n  align-items: center;\n\n  @media only screen and (min-width: 768px) {\n    flex-direction: row;\n    align-items: flex-start;\n    -webkit-box-pack: justify;\n    justify-content: space-between;\n    gap: 32px;\n    padding-left: 0;\n    padding-right: 0;\n  }\n\n  @media only screen and (min-width: 1280px) {\n    justify-content: flex-start;\n  }\n`;\n\nexport const TitleChart = styled.div`\n  @media only screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const WrapTable = styled.div`\n  @media only screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n  }\n  @media only screen and (min-width: 1280px) {\n    padding-top: 92px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport Chart from 'components/Chart/Chart';\nimport DatePicker from 'components/DataForm/DataForm';\nimport StatisticTable from 'components/StatisticTable/StatisticTable';\nimport {\n  StatisticsWrapper,\n  TitleChart,\n  TitleStatistics,\n  WrapTable,\n} from './Statistics.styled';\n\nconst Statistics = () => {\n  const { t } = useTranslation();\n\n  const result = useSelector(\n    state => state.transactions.summary.categoriesSummary\n  );\n\n  const filterExpense = result\n    ? result.filter(item => item.type === 'EXPENSE')\n    : [];\n\n  return (\n    <StatisticsWrapper>\n      <TitleChart>\n        <TitleStatistics>{t('stat')}</TitleStatistics>\n        <Chart data={filterExpense} />\n      </TitleChart>\n      <WrapTable>\n        <DatePicker />\n        <StatisticTable />\n      </WrapTable>\n    </StatisticsWrapper>\n  );\n};\n\nexport default Statistics;\n"],"names":["ChartWrapper","styled","div","_templateObject","_taggedTemplateLiteral","ImgMoney","img","_templateObject2","ChartJS","register","ArcElement","Tooltip","Legend","colorStatistics","Products","Car","Education","Leisure","Entertainment","_ref","data","totalBalance","useSelector","selectAuthData","length","_jsx","alt","src","money","categories","categoryColors","map","item","name","chartData","labels","datasets","total","backgroundColor","borderWidth","cutout","_jsxs","children","Doughnut","options","responsive","plugins","legend","position","balance","SelectBox","customSelect","container","provided","_objectSpread","maxHeight","fontFamily","fontSize","border","borderRadius","maxWidth","width","singleValue","color","control","background","minHeight","boxShadow","margin","option","isFocused","cursor","textAlign","paddingLeft","menu","menuList","backdropFilter","placeholder","paddingBottom","indicatorSeparator","display","dispatch","useDispatch","date","Date","t","useTranslation","_useState","useState","getMonth","_useState2","_slicedToArray","month","setMonth","_useState3","getFullYear","_useState4","year","setYear","useEffect","setTimeout","getTransactionsStatisticThunk","Number","months","value","label","currentYear","years","Array","from","_","index","toString","currentMonth","currentMonthObject","find","Select","styles","onChange","selectedOption","isSearchable","TransactionColor","span","props","Section","StyledWrap","_templateObject3","StyledTable","table","_templateObject4","WrapSummary","_templateObject5","WrapIncome","_templateObject6","Thead","thead","_templateObject7","Th","th","_templateObject8","ThCategory","_templateObject9","ThSum","_templateObject10","Td","td","_templateObject11","TdCategory","_templateObject12","TdSum","_templateObject13","_templateObject14","TotalExpense","_templateObject15","Total","_templateObject16","Transaction","_templateObject17","sumOfCategories","state","transactions","summary","categoriesSummary","incomeSum","incomeSummary","expenseSum","expenseSummary","Income","category","nanoid","TitleStatistics","h2","StatisticsWrapper","TitleChart","WrapTable","result","filterExpense","filter","type","Chart","DatePicker","StatisticTable"],"sourceRoot":""}